{"ast":null,"code":"var _jsxFileName = \"/home/neptunerjo/personal-projects/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Body from './components/Body/Body';\nimport Header from './components/Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [location, setLocation] = useState('Tampa');\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  const handleFetch = () => {\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${process.env.REACT_APP_PUBLIC_KEY}`;\n    const abortCont = new AbortController();\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error('could not fetch the data for that resource');\n      }\n\n      return res.json();\n    }).then(data => {\n      console.log(isPending);\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      if (err.name === 'AbortError') {\n        console.log('fetch aborted');\n      } else {\n        setError(err.message);\n        setIsPending(false);\n      }\n    });\n    return () => abortCont.abort();\n  };\n\n  const handleLocation = userLocation => {\n    const newLocation = userLocation;\n    setLocation(newLocation);\n  };\n\n  useEffect(() => {\n    handleFetch(location);\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      handleLocation: handleLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      data: data,\n      isPending: isPending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"h27poQYYmnR0k68UA4c6h6BZ2I8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/neptunerjo/personal-projects/weather-app/src/App.js"],"names":["React","useEffect","useState","Body","Header","App","location","setLocation","data","setData","isPending","setIsPending","error","setError","handleFetch","url","process","env","REACT_APP_PUBLIC_KEY","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","console","log","catch","err","name","message","abort","handleLocation","userLocation","newLocation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,OAAD,CAAxC;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;;AAGA,QAAMY,WAAW,GAAG,MAAM;AACxB,UAAMC,GAAG,GAAI,oDAAmDT,QAAS,UAASU,OAAO,CAACC,GAAR,CAAYC,oBAAqB,EAAnH;AACA,UAAMC,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,KAAK,CAACN,GAAD,EAAM;AAAEO,MAAAA,MAAM,EAAEH,SAAS,CAACG;AAApB,KAAN,CAAL,CACGC,IADH,CACQC,GAAG,IAAI;AACX,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,cAAMC,KAAK,CAAC,4CAAD,CAAX;AACD;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,KANH,EAOGJ,IAPH,CAOQf,IAAI,IAAI;AACZoB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,SAAZ;AACAD,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAZH,EAaGiB,KAbH,CAaSC,GAAG,IAAI;AACZ,UAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BJ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,OAFD,MAEO;AACLhB,QAAAA,QAAQ,CAACkB,GAAG,CAACE,OAAL,CAAR;AACAtB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AAEF,KArBH;AAuBE,WAAO,MAAMQ,SAAS,CAACe,KAAV,EAAb;AACH,GA5BD;;AA8BA,QAAMC,cAAc,GAAIC,YAAD,IAAkB;AACvC,UAAMC,WAAW,GAAGD,YAApB;AAEA7B,IAAAA,WAAW,CAAC8B,WAAD,CAAX;AACD,GAJD;;AAMApC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW,CAACR,QAAD,CAAX;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,cAAc,EAAE6B;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKzB,SAAS,iBACR;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHN,eAOI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,IAAZ;AAAkB,MAAA,SAAS,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA7DD;;GAAML,G;;KAAAA,G;AA+DN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Body from './components/Body/Body';\nimport Header from './components/Header/Header';\n\n\nconst App = () => {\n\n  const [location, setLocation] = useState('Tampa');\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null)\n\n\n  const handleFetch = () => {\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${process.env.REACT_APP_PUBLIC_KEY}`\n    const abortCont = new AbortController();\n\n    fetch(url, { signal: abortCont.signal })\n      .then(res => {\n        if (!res.ok) {\n          throw Error('could not fetch the data for that resource');\n        }\n        return res.json();\n      })\n      .then(data => {\n        console.log(isPending)\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      })\n      .catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted')\n        } else {\n          setError(err.message);\n          setIsPending(false);\n        }\n\n      });\n\n      return () => abortCont.abort();\n  }\n\n  const handleLocation = (userLocation) => {\n    const newLocation = userLocation;\n\n    setLocation(newLocation);\n  }\n\n  useEffect(() => {\n    handleFetch(location)\n  }, [location])\n\n\n  return (\n    <div className=\"app\">\n        <Header handleLocation={handleLocation}/>\n        {isPending &&\n          <div className=\"body-loading\">\n            <p>Loading...</p>\n          </div>\n        }\n        <Body data={data} isPending={isPending} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}