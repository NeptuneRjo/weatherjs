{"ast":null,"code":"var _jsxFileName = \"/home/neptunerjo/personal-projects/weather-app/src/components/Body/Body.js\";\nimport React from 'react';\nimport './styling/body.css';\nimport useFetch from '../useFetch';\nimport './BodyContent/BodyContent';\nimport BodyContent from './BodyContent/BodyContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = _ref => {\n  let {\n    location\n  } = _ref;\n  const isPending = true; // const handleFetch = (newLocation) => {\n  //   const url = `http://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${process.env.REACT_APP_PUBLIC_KEY}`\n  //   const abortCont = new AbortController();\n  //   fetch(url, { signal: abortCont.signal })\n  //     .then(res => {\n  //       if (!res.ok) {\n  //         throw Error('could not fetch the data for that resource');\n  //       }\n  //       return res.json();\n  //     })\n  //     .then(data => {\n  //       setData(data);\n  //       setIsPending(false);\n  //       setError(null);\n  //       console.log(data);\n  //     })\n  //     .catch(err => {\n  //       if (err.name === 'AbortError') {\n  //         console.log('fetch aborted')\n  //       } else {\n  //         setError(err.message);\n  //         setIsPending(false);\n  //       }\n  //     });\n  //     return () => abortCont.abort();\n  // }\n  // const {data, isPending, error} = useFetch(`http://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${process.env.REACT_APP_PUBLIC_KEY}`)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-main gradient__border\",\n    children: isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/home/neptunerjo/personal-projects/weather-app/src/components/Body/Body.js"],"names":["React","useFetch","BodyContent","Body","location","isPending"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,2BAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,MAAMC,IAAI,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAE7B,QAAMC,SAAS,GAAG,IAAlB,CAF6B,CAI7B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,cACGA,SAAS,iBACR;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA/CD;;KAAMF,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport './styling/body.css';\nimport useFetch from '../useFetch';\nimport './BodyContent/BodyContent';\nimport BodyContent from './BodyContent/BodyContent';\n\nconst Body = ({ location }) => {\n\n  const isPending = true;\n\n  // const handleFetch = (newLocation) => {\n  //   const url = `http://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${process.env.REACT_APP_PUBLIC_KEY}`\n  //   const abortCont = new AbortController();\n\n  //   fetch(url, { signal: abortCont.signal })\n  //     .then(res => {\n  //       if (!res.ok) {\n  //         throw Error('could not fetch the data for that resource');\n  //       }\n  //       return res.json();\n  //     })\n  //     .then(data => {\n  //       setData(data);\n  //       setIsPending(false);\n  //       setError(null);\n  //       console.log(data);\n  //     })\n  //     .catch(err => {\n  //       if (err.name === 'AbortError') {\n  //         console.log('fetch aborted')\n  //       } else {\n  //         setError(err.message);\n  //         setIsPending(false);\n  //       }\n\n  //     });\n\n  //     return () => abortCont.abort();\n  // }\n\n  // const {data, isPending, error} = useFetch(`http://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${process.env.REACT_APP_PUBLIC_KEY}`)\n\n\n  return (\n    <div className=\"body-main gradient__border\">\n      {isPending &&\n        <div className=\"body-loading\">\n\n        </div>\n      }\n      {/* <BodyContent data={data} /> */}\n    </div>\n  )\n}\n\nexport default Body"]},"metadata":{},"sourceType":"module"}