{"ast":null,"code":"var _jsxFileName = \"/home/neptunerjo/personal-projects/weather-app/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Body from './components/Body/Body';\nimport Header from './components/Header/Header';\nimport useFetch from './components/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [location, setLocation] = useState('Tampa');\n  const [data, setData] = useState();\n  const [isPending, setIsPending] = useState();\n  const [error, setError] = useState();\n\n  const handleLocation = userLocation => {\n    const newLocation = userLocation;\n    setLocation(newLocation);\n    console.log(data);\n  };\n\n  _s(useEffect(_s(() => {\n    _s();\n\n    const {\n      data,\n      isPending,\n      error\n    } = useFetch(`http://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${process.env.REACT_APP_PUBLIC_KEY}`);\n    setData(data);\n    setIsPending(isPending);\n    setError(error);\n  }, \"4ICUCjx4LkE1kdX2NL684UhuFKE=\", false, function () {\n    return [useFetch];\n  }), []), \"4ICUCjx4LkE1kdX2NL684UhuFKE=\", false, function () {\n    return [useFetch];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      handleLocation: handleLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      location: location,\n      data: data,\n      isPending: isPending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"DmlrVT4ZdydN3xXXE900+yC0cE4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/neptunerjo/personal-projects/weather-app/src/App.js"],"names":["React","useEffect","useState","Body","Header","useFetch","App","location","setLocation","data","setData","isPending","setIsPending","error","setError","handleLocation","userLocation","newLocation","console","log","process","env","REACT_APP_PUBLIC_KEY"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,OAAD,CAAxC;AAEA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;;AAEA,QAAMa,cAAc,GAAIC,YAAD,IAAkB;AACvC,UAAMC,WAAW,GAAGD,YAApB;AAEAR,IAAAA,WAAW,CAACS,WAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACD,GALD;;AAOA,KAAAR,SAAS,IAAC,MAAM;AAAA;;AACd,UAAM;AAACQ,MAAAA,IAAD;AAAOE,MAAAA,SAAP;AAAkBE,MAAAA;AAAlB,QAA2BR,QAAQ,CAAE,oDAAmDE,QAAS,UAASa,OAAO,CAACC,GAAR,CAAYC,oBAAqB,EAAxG,CAAzC;AAEAZ,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GANQ;AAAA,YAC0BR,QAD1B;AAAA,MAMN,EANM,CAAT;AAAA,YACmCA,QADnC;AAAA;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,cAAc,EAAEU;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAER,QAAhB;AAA0B,MAAA,IAAI,EAAEE,IAAhC;AAAsC,MAAA,SAAS,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA7BD;;IAAML,G;;KAAAA,G;AA+BN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Body from './components/Body/Body';\nimport Header from './components/Header/Header';\nimport useFetch from './components/useFetch';\n\n\nconst App = () => {\n\n  const [location, setLocation] = useState('Tampa');\n\n  const [data, setData] = useState();\n  const [isPending, setIsPending] = useState();\n  const [error, setError] = useState();\n\n  const handleLocation = (userLocation) => {\n    const newLocation = userLocation;\n\n    setLocation(newLocation);\n    console.log(data)\n  }\n\n  useEffect(() => {\n    const {data, isPending, error} = useFetch(`http://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${process.env.REACT_APP_PUBLIC_KEY}`)\n\n    setData(data);\n    setIsPending(isPending);\n    setError(error);\n  }, [])\n\n  return (\n    <div className=\"app\">\n        <Header handleLocation={handleLocation}/>\n        <Body location={location} data={data} isPending={isPending}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}