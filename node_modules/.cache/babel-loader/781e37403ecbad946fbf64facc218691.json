{"ast":null,"code":"var _jsxFileName = \"/home/neptunerjo/personal-projects/weather-app/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Body from './components/Body/Body';\nimport Header from './components/Header/Header';\nimport useFetch from './components/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [location, setLocation] = useState('Tampa');\n  const [currentData, setCurrentData] = useState();\n  const [pending, setPending] = useState();\n\n  const handleFetch = () => {\n    _s();\n\n    // Returns the JSON data, true while loading, and the error\n    const {\n      data,\n      isPending,\n      error\n    } = useFetch(`http://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${process.env.REACT_APP_PUBLIC_KEY}`);\n    setCurrentData(data);\n    setPending(isPending);\n  };\n\n  _s(handleFetch, \"4ICUCjx4LkE1kdX2NL684UhuFKE=\", false, function () {\n    return [useFetch];\n  });\n\n  handleFetch();\n\n  const handleLocation = userLocation => {\n    const newLocation = userLocation;\n    setLocation(newLocation);\n    handleFetch();\n    console.log(data);\n    console.log(userLocation);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      handleLocation: handleLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      location: location,\n      data: currentData,\n      isPending: isPending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"lky7fgEaYVjZ9f7ak6lhMQhGuss=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/neptunerjo/personal-projects/weather-app/src/App.js"],"names":["React","useState","Body","Header","useFetch","App","location","setLocation","currentData","setCurrentData","pending","setPending","handleFetch","data","isPending","error","process","env","REACT_APP_PUBLIC_KEY","handleLocation","userLocation","newLocation","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,OAAD,CAAxC;AAEA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,EAA9C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;;AAGA,QAAMW,WAAW,GAAG,MAAM;AAAA;;AAExB;AACA,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,SAAP;AAAkBC,MAAAA;AAAlB,QAA2BX,QAAQ,CAAE,oDAAmDE,QAAS,UAASU,OAAO,CAACC,GAAR,CAAYC,oBAAqB,EAAxG,CAAzC;AAEAT,IAAAA,cAAc,CAACI,IAAD,CAAd;AACAF,IAAAA,UAAU,CAACG,SAAD,CAAV;AACD,GAPD;;AARgB,KAQVF,WARU;AAAA,YAWmBR,QAXnB;AAAA;;AAgBhBQ,EAAAA,WAAW;;AAEX,QAAMO,cAAc,GAAIC,YAAD,IAAkB;AACvC,UAAMC,WAAW,GAAGD,YAApB;AAEAb,IAAAA,WAAW,CAACc,WAAD,CAAX;AACAT,IAAAA,WAAW;AACXU,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,cAAc,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEb,QAAhB;AAA0B,MAAA,IAAI,EAAEE,WAAhC;AAA6C,MAAA,SAAS,EAAEM;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjCD;;IAAMT,G;;KAAAA,G;AAmCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Body from './components/Body/Body';\nimport Header from './components/Header/Header';\nimport useFetch from './components/useFetch';\n\n\nconst App = () => {\n\n  const [location, setLocation] = useState('Tampa');\n\n  const [currentData, setCurrentData] = useState();\n  const [pending, setPending] = useState();\n\n\n  const handleFetch = () => {\n\n    // Returns the JSON data, true while loading, and the error\n    const {data, isPending, error} = useFetch(`http://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${process.env.REACT_APP_PUBLIC_KEY}`)\n\n    setCurrentData(data);\n    setPending(isPending)\n  };\n  handleFetch();\n\n  const handleLocation = (userLocation) => {\n    const newLocation = userLocation;\n\n    setLocation(newLocation);\n    handleFetch();\n    console.log(data)\n    console.log(userLocation)\n  }\n\n  return (\n    <div className=\"app\">\n        <Header handleLocation={handleLocation}/>\n        <Body location={location} data={currentData} isPending={isPending}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}